<!-- breadcrumb-section -->
	<div class="breadcrumb-section breadcrumb-bg">
		<div class="container">
			<div class="row">
				<div class="col-lg-8 offset-lg-2 text-center">
					<div class="breadcrumb-text">
						<p>See more Details</p>
						<h1>Single Product</h1>
					</div>
				</div>
			</div>
		</div>
	</div>
	<!-- end breadcrumb section -->

<!-- single product -->
<div class="single-product mt-150 mb-150">
    <div class="container">
        <div class="row" id="product-details">
            <div class="col-md-5">
                <div class="single-product-img">
                    <img class="product-image img" src="/assets/img/products/product-img-5.jpg" alt="">
                </div>
            </div>
            <div class="col-md-7">
                <div class="single-product-content">
                    <h3 class="product-title">Chargement...</h3>
                    <p class="single-product-pricing">
                        <span class="unit">Par unité</span> 
                        <span class="price" style="font-size: 32px; font-weight: 700; margin-bottom: 10px; color: #051922; line-height: inherit;">0</span>
                    </p>
                    <p class="product-description">Chargement de la description...</p>
                    <div class="single-product-form">
                        <form id="cart-form">
                            <input type="number" 
                                   class="quantity-input" 
                                   min="1" 
                                   value="1" 
                                   placeholder="Quantité">
                            <input type="hidden" class="product-id" value="">
                            <input type="hidden" class="user-id" value="26">
                        </form>
                        <a href="#" class="cart-btn">
                            <i class="fas fa-shopping-cart"></i> Ajouter au panier
                        </a>
                        <p class="category-info"><strong>Catégorie: </strong><span class="category-name">Chargement...</span></p>
                        <p class="stock-info"><strong>Stock disponible: </strong><span class="stock-quantity">0</span></p>
                    </div>
                    <h4>Partager:</h4>
                    <ul class="product-share">
                        <li><a href="#"><i class="fab fa-facebook-f"></i></a></li>
                        <li><a href="#"><i class="fab fa-twitter"></i></a></li>
                        <li><a href="#"><i class="fab fa-google-plus-g"></i></a></li>
                        <li><a href="#"><i class="fab fa-linkedin"></i></a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- end single product -->

<script>
document.addEventListener("DOMContentLoaded", async function() {
    // Récupérer l'ID du produit depuis l'URL
    const urlParams = new URLSearchParams(window.location.search);
    const productId = urlParams.get('id');
    
    if (!productId) {
        alert('Aucun produit spécifié');
        window.location.href = '/';
        return;
    }

    try {
        // Charger les détails du produit
        const response = await fetch(`http://localhost:3000/api/products/${productId}`);
        if (!response.ok) throw new Error('Erreur lors de la récupération du produit');
        
        const product = await response.json();
        if (!product) throw new Error('Produit non trouvé');

        // Mettre à jour l'interface avec les détails du produit
        updateProductDetails(product);
        setupCartButton(product);
    } catch (error) {
        console.error('Erreur:', error);
        document.getElementById('product-details').innerHTML = `
            <div class="col-12 text-center">
                <h3 class="text-danger">Erreur lors du chargement du produit</h3>
                <p>${error.message}</p>
                <a href="/" class="btn btn-primary">Retour à l'accueil</a>
            </div>
        `;
    }
});

function updateProductDetails(product) {
    // Mettre à jour l'image
    const productImage = document.querySelector('.product-image');
    productImage.src = product.image 
        ? `/images/product/${product.image}`
        : '/assets/img/products/product-img-1.jpg';
    productImage.alt = product.name;

    // Mettre à jour les informations textuelles
    document.querySelector('.product-title').textContent = product.name;
    document.querySelector('.unit').textContent = `Par ${product.unit_of_mesurement}`;
    document.querySelector('.price').textContent = `${product.price}  Ar`;
    document.querySelector('.product-description').textContent = product.description;
    document.querySelector('.category-name').textContent = product.category_name || 'Non catégorisé';
    document.querySelector('.stock-quantity').textContent = product.stock_quantity;

    // Mettre à jour les champs cachés et la quantité max
    document.querySelector('.product-id').value = product.product_id;
    const quantityInput = document.querySelector('.quantity-input');
    quantityInput.max = product.stock_quantity;
    quantityInput.placeholder = `Max: ${product.stock_quantity}`;
}

function setupCartButton(product) {
    const cartBtn = document.querySelector('.cart-btn');
    const quantityInput = document.querySelector('.quantity-input');
    const userId = document.querySelector('.user-id').value;

    cartBtn.addEventListener('click', async function(e) {
        e.preventDefault();

        const quantity = parseInt(quantityInput.value);
        if (quantity < 1 || quantity > product.stock_quantity) {
            alert(`Veuillez choisir une quantité entre 1 et ${product.stock_quantity}`);
            return;
        }

        const cartData = {
            user_id: userId,
            items: [{
                product_id: product.product_id,
                quantity: quantity,
                price: parseFloat(product.price)
            }]
        };

        try {
            const response = await fetch('http://localhost:3000/api/carts', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(cartData)
            });

            if (!response.ok) throw new Error('Erreur lors de l\'ajout au panier');

            const result = await response.json();
            alert('Produit ajouté au panier avec succès!');
            window.location.reload();
        } catch (error) {
            console.error('Erreur:', error);
            alert('Erreur lors de l\'ajout au panier: ' + error.message);
        }
    });
}
</script>
